#ifndef rapid_AgentState_idl
#define rapid_AgentState_idl

/*
 * Copyright (c) 2009 United States Government as represented by the
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 */

#include "Message.idl"

/**
 * \file
 *
 * \brief Sends Agent-specific telemetry.
 *
 * \details AgentConfig sends out the list of telemetry to be reported in AgentState (name and type of data). Also holds list of
 * extra topics if needed.
 *
 * \ingroup idlfiles
 */
module rapid {

    //@copy-c-declaration class AgentStateTypeSupport;
    //@copy-c-declaration class AgentStateDataWriter;
    //@copy-c-declaration class AgentStateDataReader;
    //@copy-c-declaration struct AgentStateSeq;


    //@copy /**
    //@copy  * AgentState message sends low-frequency updates of the state
    //@copy  * of a specific Agent.
    //@copy  */
    valuetype AgentState : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef AgentStateTypeSupport TypeSupport;
        //@copy-c-declaration typedef AgentStateDataWriter DataWriter;
        //@copy-c-declaration typedef AgentStateDataReader DataReader;
        //@copy-c-declaration typedef AgentStateSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef AgentState Type;

        //@copy /**
        //@copy  * The AgentConfig message defines the names, data types
        //@copy  * and order of the values contained in the sequence.
        //@copy  */
        public ValueSequence64 values;

    };

};


#endif // rapid_AgentState_idl
