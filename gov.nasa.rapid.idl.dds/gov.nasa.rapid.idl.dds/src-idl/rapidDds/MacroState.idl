#ifndef rapid_MacroState_idl
#define rapid_MacroState_idl

/*
 * Copyright (c) 2009 United States Government as represented by the
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 */

#include "Message.idl"

/**
 * \file
 *
 * \ingroup idlfiles
 */
module rapid {

    //@copy-declaration /** 
    //@copy-declaration  * Meta-information for an associated MacroConfig as seen by the MacroManager. 
    //@copy-declaration  */ 
    struct MacroInfo {
      //@copy-declaration /** Name of the macro. */
      String64 name;   
      //@copy-declaration /** Version number of the macro. As provided in by hdr.serial of the latest corresponding MacroConfig instance. */
      long     serial; 
      //@copy-declaration /** True if the macro passed basic checking by the MacroManager. */
      boolean  accepted; 
    };

    //@copy-declaration     /** Sequence of MacroInfo 
    //@copy-declaration      *
    //@copy-declaration      * An asset can store at max 128 macros.
    //@copy-declaration      */
    typedef sequence<MacroInfo, 128> MacroInfoSequence;    

    //@copy-c-declaration class MacroStateTypeSupport;
    //@copy-c-declaration class MacroStateDataWriter;
    //@copy-c-declaration class MacroStateDataReader;
    //@copy-c-declaration struct MacroStateSeq;
    valuetype MacroState : Message {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef MacroStateTypeSupport TypeSupport;
        //@copy-c-declaration typedef MacroStateDataWriter DataWriter;
        //@copy-c-declaration typedef MacroStateDataReader DataReader;
        //@copy-c-declaration typedef MacroStateSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef MacroState Type;

        //@copy-declaration /** All of the MacroConfigs that this agent knows about. */
        public MacroInfoSequence macros;

    };
};

#endif // rapid_MacroState_idl
