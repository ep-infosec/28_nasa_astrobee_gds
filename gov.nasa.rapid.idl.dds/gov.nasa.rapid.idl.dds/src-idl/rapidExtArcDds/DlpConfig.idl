#ifndef rapid_ext_arc_DlpConfig_idl
#define rapid_ext_arc_DlpConfig_idl

/*
 * Copyright (c) 2009 United States Government as represented by the
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 */

#include "Message.idl"

/**
 * \file
 *
 * \brief DlpConfig defines the frame in which DlpSample is sent.
 *
 * \ingroup idlfiles
 */
module rapid 
{
  module ext
  {
    module arc
    {
      struct DlpWarnCriticalRange
      {
        float lowCritical;
        float lowWarn;

        float highWarn;
        float highCritical;
      };

      struct DlpChannelConfig
      {
        String32 name;
        DlpWarnCriticalRange voltageRange;
        DlpWarnCriticalRange currentRange;
      };

      struct DlpBoardConfig
      {
        String32 name;
        DlpChannelConfig channels[3];
        DlpWarnCriticalRange tempRange;
      };

      typedef sequence<DlpBoardConfig, 32> DlpBoardConfigSequence32;

      //@copy-c-declaration class DlpConfigTypeSupport;
      //@copy-c-declaration class DlpConfigDataWriter;
      //@copy-c-declaration class DlpConfigDataReader;
      //@copy-c-declaration struct DlpConfigSeq;

      //@copy-declaration /** DlpConfig message sets up configuration for DlpSample messages. */
      valuetype DlpConfig : Message
      {
        //@copy-c-declaration #if RTI_DDS_VERSION_MAJOR < 4 || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR < 5) || (RTI_DDS_VERSION_MAJOR == 4  && RTI_DDS_VERSION_MINOR  == 5 && RTI_DDS_VERSION_RELEASE != 'f' )
        //@copy-c-declaration typedef DlpConfigTypeSupport TypeSupport;
        //@copy-c-declaration typedef DlpConfigDataWriter DataWriter;
        //@copy-c-declaration typedef DlpConfigDataReader DataReader;
        //@copy-c-declaration typedef DlpConfigSeq Seq;
        //@copy-c-declaration #endif
        //@copy-c-declaration typedef DlpConfig Type;

        public DlpBoardConfigSequence32 dlpBoards;
      };
    };
  };
};

#endif // rapid_ext_arc_DlpConfig_idl
