#ifndef rapid_ext_ExtCommandConstants_idl
#define rapid_ext_ExtCommandConstants_idl

/*
 * Copyright (c) 2009 United States Government as represented by the 
 * Administrator of the National Aeronautics and Space Administration.
 * All Rights Reserved.
 */

#include "BaseTypes.idl"

/**
 * \file
 *
 * \brief ExtCommandConstants holds parameter lists for extension commands.
 *
 * \ingroup idlfiles
 */ 
module rapid {
  module ext {

    //   For a sample command, define the command key:
    //
    //     const String32 COMMAND = "Command";
    //
    //   Next, define a method on the command:
    //
    //     const String32 COMMAND_METHOD_FOO = "foo";
    //
    //   Finally, define method parameters:
    //
    //     const String32 COMMMAND_METHOD_FOO_PARAM_BAR = "fooParam1";
    //     const String32 COMMMAND_METHOD_FOO_DTYPE_BAR = RAPID_FLOAT;

    const String32 PROCMGR = "ProcessManager"; 

    //@copy-declaration /**  Request to start a process. */
    const String32 PROCMGR_METHOD_START = "start"; 
    //@copy-declaration /**  Request to stop a process. */
    const String32 PROCMGR_METHOD_STOP = "stop"; 
    //@copy-declaration /**  Request to kill a process. */
    const String32 PROCMGR_METHOD_KILL = "kill"; 
    //@copy-declaration /**  Setting the command-line parameters for a process. */
    const String32 PROCMGR_METHOD_SETCOMMANDLINE = "setCommandLine"; 

    //@copy-declaration /** Key for parameter used in reply by bridge. */
    const String32 PROCMGR_METHOD_PARAM_PROCESSID = "proccessId"; 
    const DataType PROCMGR_METHOD_DTYPE_PROCESSID = RAPID_INT;
    
    const String32 PROCMGR_METHOD_PARAM_CMDLINE = "cmdLine"; 
    const DataType PROCMGR_METHOD_DTYPE_CMDLINE = RAPID_STRING;
    
    const String32 VESCTRL = "VESCtrl"; 

    //@copy-declaration /**  Request to start a process. */
    const String32 VESCTRL_METHOD_SETACTIVE = "setActive"; 
    const String32 VESCTRL_METHOD_SETADVISORYMODE = "setAdvisoryMode"; 
    //@copy-declaration /** Key for parameter used in VECtrl. */
    const String32 VESCTRL_METHOD_PARAM_FLAG = "flag"; 
    const DataType VESCTRL_METHOD_DTYPE_FLAG = RAPID_BOOL;


    const String32 LMCTRL = "LocalMapCtrl"; 

    //@copy-declaration /**  Request to start a process. */
    const String32 LMCTRL_METHOD_SETACTIVE = "setActive"; 
    const String32 LMCTRL_METHOD_CLEARMAP = "clearMap"; 
    const String32 LMCTRL_METHOD_CLEARCORRECTION = "clearCorrection"; 
    const String32 LMCTRL_METHOD_CLEARUNDERROVER = "clearUnderRover"; 
    const String32 LMCTRL_METHOD_SETREGION = "setRegion"; 
    //@copy-declaration /** Key for parameter used in LocalMapCtrl. */
    const String32 LMCTRL_METHOD_PARAM_FLAG = "flag"; 
    const DataType LMCTRL_METHOD_DTYPE_FLAG = RAPID_BOOL;
    const String32 LMCTRL_METHOD_PARAM_RADIUS = "radius"; 
    const DataType LMCTRL_METHOD_DTYPE_RADIUS = RAPID_FLOAT;
    const String32 LMCTRL_METHOD_PARAM_X = "x"; 
    const DataType LMCTRL_METHOD_DTYPE_X = RAPID_FLOAT;
    const String32 LMCTRL_METHOD_PARAM_Y = "y"; 
    const DataType LMCTRL_METHOD_DTYPE_Y = RAPID_FLOAT;
    const String32 LMCTRL_METHOD_PARAM_TRAV = "traversability"; 
    const DataType LMCTRL_METHOD_DTYPE_TRAV = RAPID_FLOAT;
    const String32 LMCTRL_METHOD_PARAM_CERT = "certainty"; 
    const DataType LMCTRL_METHOD_DTYPE_CERT = RAPID_FLOAT;
  };
};


#endif // rapid_ext_ExtCommandConstants_idl
